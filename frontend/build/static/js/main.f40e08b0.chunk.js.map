{"version":3,"sources":["component/Footer.js","component/Navbar.js","component/Home.js","component/Postservice.js","component/PostCard.js","component/Blog.js","component/Postlist.js","component/Feedback.js","App.js","serviceWorker.js","index.js"],"names":["Footer","props","state","show","className","href","target","Component","Navbar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","this","home","blog","feedback","Home","document","title","src","alt","width","height","API_URL","Postservice","axios","get","then","response","data","slug","postservice","PostCard","allcards","bind","loadBlog","getAllPost","promise","setState","item","map","value","index","push","tag","descripition","time","Blog","align","Post","posts","fetch","getElementById","style","display","match","params","getPost","hide","role","aria-valuenow","aria-valuemin","aria-valuemax","onClick","dangerouslySetInnerHTML","__html","description","Feedback","msg","innerHTML","onSubmit","submitted","action","method","name","placeholder","required","rows","class","App","path","exact","component","Postlist","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f40e08b0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n// import { render } from '@testing-library/react';\r\n\r\nclass Footer extends Component{\r\n    constructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state={show:false};\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div className=\"black card card-body green\">\r\n                <p className=\"tc f3 b bgreen black rounded-pill\" >&copy;abhiishek_kushwaha</p>\r\n                <div className=\"d-flex justify-center \">\r\n                    <a href=\"https://www.github.com/abhishekushwaha610/\"  target=\"_\"> <i className=\"fa fa-github-alt f1 grow green\"></i> </a>\r\n                    <a href=\"https://www.instagram.com/abhiishek_kushwaha/\"  target=\"_\"> <i className=\"fa fa-instagram f1 grow green mx-4\"></i> </a>\r\n                    <a href=\"https://www.linkedin.com/in/abhiishek-kushwaha/\"  target=\"_\"> <i className=\"fa fa-linkedin  f1 grow green\"></i> </a>\r\n                </div>\r\n                \r\n                <p className=\"tc mt-4\">Find me.</p>\r\n            </div>\r\n            )\r\n        }\r\n        \r\n}\r\nexport default Footer","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Navbar extends Component{\r\n    // constructor(props){\r\n    //     super(props)\r\n        \r\n    // }\r\n    render(){\r\n        \r\n        return (\r\n        <nav className=\"navbar navbar-expand-lg py-3 black green\">\r\n            <a className=\"navbar-brand success \" href=\"/\">Abhishek Kushwaha</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse d-flex\" id=\"navbarNavAltMarkup\">\r\n                <div className=\" navbar-nav ml-auto\" >\r\n                    <Link to=\"/\" className={`nav-link green ${this.props.home}`} >Home <span className=\"sr-only\">(current)</span></Link>\r\n                    <Link to=\"/blog\" className={`nav-link green mx-5 ${this.props.blog}`} to=\"/blog\">Blog</Link>\r\n                    <Link to= \"/feedback\" className={`nav-link green mr-5 ${this.props.feedback}`} href=\"/feedback\">Feedback</Link>\r\n                    {/* <a className=\"nav-item nav-link disabled\" href=\"#\">Disabled</a>  */}\r\n                    \r\n                </div>\r\n            </div>\r\n        </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar\r\n","import React, {Component} from 'react'\r\nimport Navbar from './Navbar';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Home extends Component{\r\n    constructor(props)\r\n\t{\r\n        super(props);\r\n\t\tthis.state={show:false};\r\n    }\r\n    componentDidMount(){\r\n        document.title = \"Abhishek | Home\"\r\n    }\r\n    render() {\r\n        return   (\r\n        <div className=\"jumbotron black pt-4 mb-0\">\r\n            <Navbar home={\"line\"}/>\r\n            <div className=\"container  text-center\">\r\n                <img src=\"https://i1.wp.com/fudoushin.wordpress.com/files/2009/05/img_4693.jpg?resize=1200%2C800&crop=1\" alt=\"\" className=\"rounded-circle\"  width=\"200\" height=\"200\"/>\r\n                <h1 className=\"mt-3 green \">Abhishek Kushwaha </h1>\r\n                <h5 className=\"text-success \"> Hi, I am Programmer web Developer Competative Programer and Machine learner.</h5>\r\n                <p className=\"green \">abhishekushwaha610@gmail.com</p>\r\n                <p className=\"green \">+91-9039818826</p>\r\n                <div className=\"mt-5\">\r\n                    <Link to=\"/blog\"> <button className=\"btn btn-outline-light mr-4 col-md-2\">View Blog</button></Link>\r\n                    {/* <button className=\"btn btn-info\">View Blog</button> */}\r\n                </div>\r\n            </div>\r\n            <div className=\"container mt-5\">\r\n            \r\n            <hr className=\"bgreen mt-5\"/>\r\n            <details className=\"green\"> \r\n                <summary className=\"d-flex align-items-center\">Is it Pesronal Blog?<span className=\"ml-auto\"> &nabla;</span></summary>            \r\n                 <p className=\"mt-3 text-light\">Yes.. this my Pesronal site, where i share my expereince and knowlebge. </p>\r\n                {/* <hr className=\"bgreen\"/> */}\r\n            </details>\r\n            <hr className=\"bgreen \"/>\r\n            <details className=\"green\"> \r\n                <summary className=\"d-flex align-items-center\">Is it Pesronal Blog?<span className=\"ml-auto\"> &nabla;</span></summary>            \r\n                 <p className=\"mt-3 text-light\">Yes.. this my Pesronal site, where i share my expereince and knowlebge. </p>\r\n                <hr className=\"bgreen\"/>\r\n            </details>\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import axios from 'axios';\r\nconst API_URL = 'http://localhost:8000/api';\r\n\r\n\r\nexport default class Postservice{\r\n    getAllPost(){\r\n        return axios.get(`${API_URL}/`).then(response => response.data);\r\n    }\r\n    \r\n    getPost(slug){\r\n        return axios.get(`${API_URL}/${slug}`).then(response => response.data);\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import Post from './Post';\r\n// import axios from \"axios\";\r\nimport Postservice from './Postservice'\r\n\r\nconst postservice = new Postservice();\r\n\r\nclass PostCard extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        blog:[],\r\n    };\r\n    this.allcards = this.allcards.bind(this);\r\n    this.loadBlog = this.loadBlog.bind(this);\r\n      }  \r\n      \r\n        componentWillMount() {\r\n              this.loadBlog();\r\n            }\r\n          \r\n            async loadBlog()\r\n            {\r\n        //   const promise = await axios.get(\"http://localhost:8000/api/blog/\");\r\n            postservice.getAllPost().then(promise => {\r\n                // console.log(promise)\r\n                const data = promise;\r\n                this.setState({blog:data});\r\n            })\r\n                        \r\n        }\r\n        allcards() {\r\n            const item = [];\r\n            this.state.blog.map((value,index)=>{\r\n                // console.log(index+\" \"+value.title);\r\n                \r\n                item.push(\r\n                    <Link to={`/${value.id}`} className=\"card text-decoration-none green px-0 Fira black grow\">\r\n                    <div className=\"card-header line\">{value.tag}</div>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{value.title}df</h5>\r\n                        <p>{value.descripition}</p>\r\n                        <small className=\"text-muted\">{value.time}</small>\r\n                    </div>\r\n                    <div className=\"card-footer Fira\"></div>\r\n                </Link>\r\n            );\r\n        })\r\n        \r\n        return item;\r\n    }\r\n\r\n    render(){\r\n        return <this.allcards/>;\r\n    }\r\n}\r\n    // function post_name(){\r\n        //     let {slug} = useParams();\r\n        //     return(\r\n            //       <Post slug={slug}/>\r\n            //     )\r\n//   }\r\n\r\nexport default PostCard","import React, { Component } from 'react';\r\nimport PostCard from \"./PostCard\"\r\nimport Navbar from './Navbar';\r\n\r\n\r\nclass Blog extends Component{\r\n    componentDidMount(){\r\n        document.title = \"Blog | Abhishek\"\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"black m-0 pt-4 jumbotron\">\r\n            <Navbar blog={\"line\"}/>\r\n\r\n                <div className=\"container \">\r\n                    <h2 className=\"green line mb-5\" align=\"center\">Some Blog</h2>\r\n                    <div className=\"card-columns\">\r\n                    <PostCard/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Blog ","import React,{Component} from 'react'\r\nimport Navbar from './Navbar';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Postservice from \"./Postservice\";\r\n\r\nconst postservice = new Postservice();\r\n\r\nclass Post extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {posts:[],data: 'none'}\r\n        this.fetch = this.fetch.bind(this)\r\n    }\r\n    componentWillMount() {\r\n        this.loadBlog(); \r\n        this.fetch() \r\n    }\r\n    \r\n    async loadBlog(){\r\n        postservice.getAllPost().then(promise =>{\r\n            this.setState({posts:promise});\r\n        })\r\n    }\r\n    fetch(slug){\r\n        if (!slug){slug = this.props.match.params.slug}else{\r\n            const val  = document.getElementById(\"progress\");\r\n            val.style.display = \"flex\";\r\n        \r\n        }\r\n        postservice.getPost(slug).then(promise => {\r\n            const data = promise;\r\n            this.setState({data:data})\r\n            this.hide()\r\n            document.title = data.title\r\n        })\r\n    }\r\n        hide(){\r\n            const val  = document.getElementById(\"progress\");\r\n            val.style.display = \"none\"}\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"black m-0 pt-4 jumbotron\">\r\n                <Navbar blog={\"line\"}/>\r\n                <p className=\"bgreen p-2 b mb-0 rounded  text-danger\">post/{this.state.data.title}</p>\r\n                <div className=\"progress\" id= \"progress\" style={{display:\"none\"}}>\r\n                    <div className=\"progress-bar black progress-bar-striped progress-bar-animated\" role=\"progressbar\" aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width: \"100%\"}}></div>\r\n                </div>    \r\n                \r\n                <div className=\"col-md-11 mt-5 \">\r\n                    <div className=\"card-deck\">\r\n                        <div className=\"card col-md-3 black green  px-0\">\r\n                            <h5 className=\"card-header line Fira white\"><b>List of Content</b></h5>\r\n                \r\n                            {this.state.posts.map(value => (\r\n                                <Link to={`/${value.slug}`} onClick={() => (this.fetch(value.slug)) } className=\"list-group-item list-group-item-action black green Fira\">{value.title}</Link>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"card Fira black green\">\r\n                            <div className=\"card-header line\">{this.state.data.tag}</div>\r\n                            <div className=\"card-body\">\r\n                                <h3>{this.state.data.title}</h3>\r\n                                \r\n                                <span className=\"tl\" dangerouslySetInnerHTML={{__html: this.state.data.description}} />\r\n                            </div>\r\n                            <div className=\"card-footer text-muted\">{this.state.data.time}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Post","import React, { Component } from 'react'\r\nimport Navbar from './Navbar';\r\n\r\nexport default class Feedback extends Component {\r\n    componentDidMount(){\r\n        document.title = \"Feedback | Abhishek\"\r\n        const msg = document.getElementById(\"massgage\");\r\n        if(msg){document.getElementById(\"msg\").innerHTML = msg.innerHTML;}\r\n    }\r\n    \r\n    submitted(){\r\n        document.getElementById(\"submitButton\").style.display = \"none\";\r\n        document.getElementById(\"submitLoading\").style.display = \"block\";\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron black pt-4 mb-0\">\r\n            <Navbar feedback={\"line\"}/>\r\n            <div className=\"bgreen p-3 f-4\" id=\"msg\"><b>Your Feedback is valuable for me.</b> </div>\r\n                <div className=\"card Fira black container col-md-3 px-0 mt-4\">\r\n                    <div className=\"card-header Fira green\">Feedback</div>\r\n                    <div className=\"card-body\">\r\n                        <form className=\"form-group\"  onSubmit = {this.submitted} action=\"/sending/\" method=\"POST\">\r\n                            <input type=\"text\" id= \"name\" name=\"name\" className=\"form-control black Fira green mt-4\" placeholder=\"name or email\" required />\r\n                            <textarea id=\"desc\" name= \"desc\" className=\"form-control black Fira green my-4\" placeholder= \"Write\" rows=\"5\" required></textarea>\r\n                            <button type=\"submit my-5\" className=\"btn Fira bgreen col-md-12 mt-4 justify-content-center d-flex\">\r\n                                <span id=\"submitButton\">Submit</span>\r\n                                <div id=\"submitLoading\" class=\"spinner-border \" role=\"status\" style={{display:'none'}}>\r\n                                    <span class=\"sr-only\">Loading...</span>\r\n                                </div>\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\n// import logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'tachyons';\n\nimport \"./App.css\";\nimport Footer from './component/Footer';\nimport Home from './component/Home'\nimport Blog from './component/Blog'\nimport Postlist from './component/Postlist' \nimport Feedback from './component/Feedback' \nimport {Route,BrowserRouter,Switch} from 'react-router-dom'\nfunction App() {\n  return (\n    <div className=\"App\">\n<BrowserRouter>\n  <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/blog\"  component={Blog} />\n        <Route path=\"/feedback\"  component={Feedback} />\n        <Route path=\"/:slug\"  component={Postlist} />\n\n  </Switch>\n</BrowserRouter>\n<Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}